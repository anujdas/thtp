#
# Autogenerated by Thrift Compiler (0.11.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'test_types'

module THTP
  module Test
    module TestService
      class Client
        include ::Thrift::Client

        def test_void_return()
          send_test_void_return()
          recv_test_void_return()
        end

        def send_test_void_return()
          send_message('test_void_return', Test_void_return_args)
        end

        def recv_test_void_return()
          result = receive_message(Test_void_return_result)
          raise result.oh_no_exception unless result.oh_no_exception.nil?
          return
        end

        def test_primitive_return(input)
          send_test_primitive_return(input)
          return recv_test_primitive_return()
        end

        def send_test_primitive_return(input)
          send_message('test_primitive_return', Test_primitive_return_args, :input => input)
        end

        def recv_test_primitive_return()
          result = receive_message(Test_primitive_return_result)
          return result.success unless result.success.nil?
          raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'test_primitive_return failed: unknown result')
        end

        def test_struct_return(structs)
          send_test_struct_return(structs)
          return recv_test_struct_return()
        end

        def send_test_struct_return(structs)
          send_message('test_struct_return', Test_struct_return_args, :structs => structs)
        end

        def recv_test_struct_return()
          result = receive_message(Test_struct_return_result)
          return result.success unless result.success.nil?
          raise result.oops_exception unless result.oops_exception.nil?
          raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'test_struct_return failed: unknown result')
        end

      end

      class Processor
        include ::Thrift::Processor

        def process_test_void_return(seqid, iprot, oprot)
          args = read_args(iprot, Test_void_return_args)
          result = Test_void_return_result.new()
          begin
            @handler.test_void_return()
          rescue ::THTP::Test::OhNo => oh_no_exception
            result.oh_no_exception = oh_no_exception
          end
          write_result(result, oprot, 'test_void_return', seqid)
        end

        def process_test_primitive_return(seqid, iprot, oprot)
          args = read_args(iprot, Test_primitive_return_args)
          result = Test_primitive_return_result.new()
          result.success = @handler.test_primitive_return(args.input)
          write_result(result, oprot, 'test_primitive_return', seqid)
        end

        def process_test_struct_return(seqid, iprot, oprot)
          args = read_args(iprot, Test_struct_return_args)
          result = Test_struct_return_result.new()
          begin
            result.success = @handler.test_struct_return(args.structs)
          rescue ::THTP::Test::Oops => oops_exception
            result.oops_exception = oops_exception
          end
          write_result(result, oprot, 'test_struct_return', seqid)
        end

      end

      # HELPER FUNCTIONS AND STRUCTURES

      class Test_void_return_args
        include ::Thrift::Struct, ::Thrift::Struct_Union

        FIELDS = {

        }

        def struct_fields; FIELDS; end

        def validate
        end

        ::Thrift::Struct.generate_accessors self
      end

      class Test_void_return_result
        include ::Thrift::Struct, ::Thrift::Struct_Union
        OH_NO_EXCEPTION = 1

        FIELDS = {
          OH_NO_EXCEPTION => {:type => ::Thrift::Types::STRUCT, :name => 'oh_no_exception', :class => ::THTP::Test::OhNo}
        }

        def struct_fields; FIELDS; end

        def validate
        end

        ::Thrift::Struct.generate_accessors self
      end

      class Test_primitive_return_args
        include ::Thrift::Struct, ::Thrift::Struct_Union
        INPUT = 99

        FIELDS = {
          INPUT => {:type => ::Thrift::Types::STRUCT, :name => 'input', :class => ::THTP::Test::FancyStruct}
        }

        def struct_fields; FIELDS; end

        def validate
        end

        ::Thrift::Struct.generate_accessors self
      end

      class Test_primitive_return_result
        include ::Thrift::Struct, ::Thrift::Struct_Union
        SUCCESS = 0

        FIELDS = {
          SUCCESS => {:type => ::Thrift::Types::I32, :name => 'success'}
        }

        def struct_fields; FIELDS; end

        def validate
        end

        ::Thrift::Struct.generate_accessors self
      end

      class Test_struct_return_args
        include ::Thrift::Struct, ::Thrift::Struct_Union
        STRUCTS = 1

        FIELDS = {
          STRUCTS => {:type => ::Thrift::Types::LIST, :name => 'structs', :element => {:type => ::Thrift::Types::STRUCT, :class => ::THTP::Test::FancyStruct}}
        }

        def struct_fields; FIELDS; end

        def validate
        end

        ::Thrift::Struct.generate_accessors self
      end

      class Test_struct_return_result
        include ::Thrift::Struct, ::Thrift::Struct_Union
        SUCCESS = 0
        OOPS_EXCEPTION = 1

        FIELDS = {
          SUCCESS => {:type => ::Thrift::Types::STRUCT, :name => 'success', :class => ::THTP::Test::RetVal},
          OOPS_EXCEPTION => {:type => ::Thrift::Types::STRUCT, :name => 'oops_exception', :class => ::THTP::Test::Oops}
        }

        def struct_fields; FIELDS; end

        def validate
        end

        ::Thrift::Struct.generate_accessors self
      end

    end

  end
end
